name: Devminjeong-eum-Backend-Production

on:
  push:
    branches:
      - main
      - feature/DEV-74

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          # platforms: linux/amd64,linux/arm64/v8
          file: ./docker/backend/Dockerfile 
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devminjeong-eum-backend:latest

  deploy-application:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_SSH_HOST }}
        username: ${{ secrets.EC2_SSH_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          scp -o StrictHostKeyChecking=no -i ${{ secrets.EC2_PRIVATE_KEY }} docker-compose.yml ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_SSH_HOST }}:/home/${{ secrets.EC2_SSH_USER }}/docker-compose.yml
          cd /home/${{ secrets.EC2_SSH_USER }}

          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.production
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env.production
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.production
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env.production
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env.production
          echo "KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}" >> .env.production
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env.production
          echo "KAKAO_SECRET_KEY=${{ secrets.KAKAO_SECRET_KEY }}" >> .env.production
          echo "GOOGLE_API_EMAIL=${{ secrets.GOOGLE_API_EMAIL }}" >> .env.production
          echo "GOOGLE_PRIVATE_KEY=${{ secrets.GOOGLE_PRIVATE_KEY }}" >> .env.production
          echo "GOOGLE_SPREAD_SHEET_ID=${{ secrets.GOOGLE_SPREAD_SHEET_ID }}" >> .env.production
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env.production
          echo "TEST_ADMIN_KEY"=${{ secrets.TEST_ADMIN_KEY }} >> .env.production
          echo "DISCORD_WEBHOOK_URL"=${{ secrets.DISCORD_WEBHOOK_URL }} >> .env.production

          sudo docker system prune -a --volumes -f
          sudo docker-compose down || echo "No containers to stop"
          sudo docker compose pull -q
          sudo docker-compose --env-file .env.production up -d --build --no-recreate --quiet-pull