name: Devminjeong-eum-Backend-Production

on:
  push:
    branches:
      - main
      - feature/DEV-74

jobs:
  # build-image:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build and Push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         push: true
  #         # platforms: linux/amd64,linux/arm64/v8
  #         file: ./docker/backend/Dockerfile 
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devminjeong-eum-backend:latest

  deploy-application:
    # needs: build-image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create Environment Variable File
      run: |
        cat <<EOF > .env.production
        DB_HOST=${{ secrets.DB_HOST }}
        DB_PORT=${{ secrets.DB_PORT }}
        DB_USERNAME=${{ secrets.DB_USERNAME }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_DATABASE=${{ secrets.DB_DATABASE }}
        JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
        KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
        KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
        KAKAO_SECRET_KEY=${{ secrets.KAKAO_SECRET_KEY }}
        GOOGLE_API_EMAIL=${{ secrets.GOOGLE_API_EMAIL }}
        GOOGLE_PRIVATE_KEY="${{ secrets.GOOGLE_PRIVATE_KEY }}"
        GOOGLE_SPREAD_SHEET_ID=${{ secrets.GOOGLE_SPREAD_SHEET_ID }}
        SERVER_PORT=${{ secrets.SERVER_PORT }}
        TEST_ADMIN_KEY=${{ secrets.TEST_ADMIN_KEY }}
        DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
        EOF

    - name: List Root Directory Contents
      run: |
        ls -la

    - name: Copy Docker Compose Configuration Files
      uses: appleboy/scp-action@v0.1.7
      with: 
        host: ${{ secrets.EC2_SSH_HOST }}
        username: ${{ secrets.EC2_SSH_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: "./docker-compose.yml"
        target: "/home/${{ secrets.EC2_SSH_USER }}/dev-malssami"

    - name: Copy Environment Variable Files
      uses: appleboy/scp-action@v0.1.7
      with: 
        host: ${{ secrets.EC2_SSH_HOST }}
        username: ${{ secrets.EC2_SSH_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: ".env.production"
        target: "/home/${{ secrets.EC2_SSH_USER }}/dev-malssami"


    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_SSH_HOST }}
        username: ${{ secrets.EC2_SSH_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets.EC2_SSH_USER }}/dev-malssami
          
          sudo docker system prune -a --volumes -f
          sudo docker-compose down || echo "No containers to stop"
          sudo docker compose pull -q
          sudo docker-compose --env-file .env.production up -d --build --no-recreate --quiet-pull